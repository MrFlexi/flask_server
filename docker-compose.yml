version: '3'
services:
  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    volumes:
      - ./app:/var/www
    environment:
      APP_ENV: "development"
      APP_DEBUG: "True"
      APP_PORT: 5000
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: mrflexi_root
      MONGODB_PASSWORD: nc:13Arequipa
      MONGODB_HOSTNAME: mongodb
    networks:
      - backend
    expose:
      - 5000
    
  redis:
    image: "redis:alpine"
    container_name: redisdb
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - mydata:/data/db 

  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: mrflexi_root
      MONGO_INITDB_ROOT_PASSWORD: nc:13Arequipa
      MONGO_INITDB_DATABASE: geonames
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
     - mydata:/data/db     
    networks:
      - backend
    ports:
      - 27017:27017

volumes:
  mydata:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/pi/projects/storage    #hier werden die Daten persistent abgelegt
networks:
  backend:
     driver: bridge